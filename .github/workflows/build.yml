name: Build and Release audiofile

on:
  push:
    branches:
      - master

  workflow_dispatch:
    inputs:
      release_type:
        description: 'Set to "main" for full release; else pre-release'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  build-linux-alsa:
    name: Build Linux with ALSA
    runs-on: ubuntu-latest
    outputs:
      linux-path: ./release/audiofile
    steps:
      - uses: actions/checkout@v5

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential autoconf automake autopoint libtool pkg-config \
            gettext intltool gtk-doc-tools \
            asciidoc docbook-xml docbook-xsl \
            libxml2-utils libasound2-dev

      - name: Generate configure & Build
        run: |
          chmod +x ./autogen.sh
          ./autogen.sh
          chmod +x ./configure
          ./configure || true
          make -j$(nproc)

      - name: Strip audiofile binary only
        run: strip ./audiofile || true

      - name: Upload Linux build with ALSA artifact
        uses: actions/upload-artifact@v4
        with:
          name: audiofile-linux
          path: ./audiofile

      - name: Upload Documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: audiofile-docs
          path: ./docs/_build

  build-linux-portaudio:
    name: Build Linux with PortAudio
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential autoconf automake autopoint libtool pkg-config \
            gettext intltool gtk-doc-tools \
            asciidoc docbook-xml docbook-xsl \
            libxml2-utils portaudio19-dev

      - name: Generate configure & Build audiofile
        run: |
          chmod +x ./autogen.sh
          ./autogen.sh
          chmod +x ./configure
          ./configure
          make -j$(nproc) --disable-docs

      - name: Strip audiofile binary only
        run: strip ./audiofile || true

      - name: Upload Linux build with PortAudio artifact
        uses: actions/upload-artifact@v4
        with:
          name: audiofile-linux-system-pa
          path: ./audiofile

  build-windows-x64:
    name: Cross-build Windows x64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install MinGW-w64 and autotools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 \
            make binutils-mingw-w64 automake autoconf autopoint libtool pkg-config \
            gettext intltool gtk-doc-tools asciidoc docbook-xml docbook-xsl libxml2-utils

      - name: Build PortAudio for Windows x64
        run: |
          git clone https://github.com/PortAudio/portaudio.git
          cd portaudio
          ./configure --host=x86_64-w64-mingw32 --disable-shared --prefix=$(pwd)/build
          make
          make install
          cd ..

      - name: Generate configure & Build audiofile
        run: |
          chmod +x ./autogen.sh
          ./autogen.sh
          chmod +x ./configure
          ./configure CC=x86_64-w64-mingw32-gcc \
                      CXX=x86_64-w64-mingw32-g++ \
                      CPPFLAGS="-I$(pwd)/portaudio/build/include" \
                      LDFLAGS="-L$(pwd)/portaudio/build/lib" \
                      PKG_CONFIG_LIBDIR=$(pwd)/portaudio/build/lib/pkgconfig \
                      --host=x86_64-w64-mingw32
          make -j$(nproc) --disable-docs

      - name: Strip audiofile.exe only
        run: x86_64-w64-mingw32-strip ./audiofile.exe || true

      - name: Upload Windows x64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: audiofile-windows-x64
          path: ./audiofile.exe

  build-windows-x86:
    name: Cross-build Windows x86
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install MinGW-w64 and autotools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-mingw-w64-i686 g++-mingw-w64-i686 \
            make binutils-mingw-w64 automake autoconf autopoint libtool pkg-config \
            gettext intltool gtk-doc-tools asciidoc docbook-xml docbook-xsl libxml2-utils

      - name: Build PortAudio for Windows x86
        run: |
          git clone https://github.com/PortAudio/portaudio.git
          cd portaudio
          ./configure --host=i686-w64-mingw32 --disable-shared --prefix=$(pwd)/build
          make
          make install
          cd ..

      - name: Generate configure & Build audiofile
        run: |
          chmod +x ./autogen.sh
          ./autogen.sh
          chmod +x ./configure
          ./configure CC=i686-w64-mingw32-gcc \
                      CXX=i686-w64-mingw32-g++ \
                      CPPFLAGS="-I$(pwd)/portaudio/build/include" \
                      LDFLAGS="-L$(pwd)/portaudio/build/lib" \
                      PKG_CONFIG_LIBDIR=$(pwd)/portaudio/build/lib/pkgconfig \
                      --host=i686-w64-mingw32
          make -j$(nproc) --disable-docs

      - name: Strip audiofile.exe only
        run: i686-w64-mingw32-strip ./audiofile.exe || true

      - name: Upload Windows x86 artifact
        uses: actions/upload-artifact@v4
        with:
          name: audiofile-windows-x86
          path: ./audiofile.exe

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install dependencies
        run: brew install pkg-config automake libtool autoconf gettext intltool gtk-doc asciidoc docbook-xsl portaudio cpanminus libxml2 && \
             echo "export PATH=$(brew --prefix libxml2)/bin:$PATH" >> $GITHUB_PATH && \
             echo "export PKG_CONFIG_PATH=$(brew --prefix libxml2)/lib/pkgconfig" >> $GITHUB_ENV && \
             echo "export LDFLAGS=-L$(brew --prefix libxml2)/lib" >> $GITHUB_ENV && \
             echo "export CPPFLAGS=-I$(brew --prefix libxml2)/include" >> $GITHUB_ENV

      - name: Install XML parser
        run: cpan XML::Parser

      - name: Generate configure & Build
        run: |
          export PERL_BAD_REGEX=0
          chmod +x ./autogen.sh
          ./autogen.sh
          chmod +x ./configure || true
          ./configure
          make -j$(sysctl -n hw.ncpu) --disable-docs

      - name: Strip audiofile binary only
        run: strip ./audiofile || true

      - name: Build Documentation
        run: |
          cd docs
          make
        shell: bash

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: audiofile-macos
          path: ./audiofile

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs:
      - build-linux-alsa
      - build-linux-portaudio
      - build-windows-x64
      - build-windows-x86
      - build-macos
    steps:
      - uses: actions/checkout@v5

      - name: Download Linux ALSA artifact
        uses: actions/download-artifact@v5
        with:
          name: audiofile-linux-alsa
          path: release/linux-alsa

      - name: Download Linux PortAudio artifact
        uses: actions/download-artifact@v5
        with:
          name: audiofile-linux-portaudio
          path: release/linux-portaudio

      - name: Download Windows x64 artifact
        uses: actions/download-artifact@v5
        with:
          name: audiofile-windows-x64
          path: release/windows-x64

      - name: Download Windows x86 artifact
        uses: actions/download-artifact@v5
        with:
          name: audiofile-windows-x86
          path: release/windows-x86

      - name: Download macOS artifact
        uses: actions/download-artifact@v5
        with:
          name: audiofile-macos
          path: release/macos

      - name: Download Documentation artifact
        uses: actions/download-artifact@v5
        with:
          name: audiofile-docs
          path: release/docs

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.run_number }}
          prerelease: ${{ github.event.inputs.release_type != 'main' }}
          files: |
            release/linux-alsa/audiofile
            release/linux-portaudio/audiofile
            release/windows-x64/audiofile.exe
            release/windows-x86/audiofile.exe
            release/macos/audiofile
            release/docs/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
